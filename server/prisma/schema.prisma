// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// npx prisma db push
// npx prisma studio

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  email             String             @unique
  name              String?
  username          String             @unique
  profilePicture    String             @default("")
  hashedPassword    String?
  createAt          DateTime           @default(now())
  updateAt          DateTime           @updatedAt
  sentMessages      Messages[]         @relation("sentMessages")
  receivedMessages  Messages[]         @relation("receivedMessages")
  conversationLinks ConversationUser[]
  sentGroupMessages MessageGroup[]     @relation("sentGroupMessages")
}

model Messages {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  sender        User     @relation("sentMessages", fields: [senderId], references: [id])
  senderId      String   @db.ObjectId
  receiver      User     @relation("receivedMessages", fields: [receiverId], references: [id])
  receiverId    String   @db.ObjectId
  type          String   @default("text")
  message       String
  messageStatus String   @default("sent")
  createdAt     DateTime @default(now())
}

model MessageGroup {
  id             String             @id @default(auto()) @map("_id") @db.ObjectId
  sender         User               @relation("sentGroupMessages", fields: [senderId], references: [id])
  senderId       String             @db.ObjectId
  type           String             @default("text")
  message        String
  messageStatus  String             @default("sent")
  createdAt      DateTime           @default(now())
  conversation   Conversations      @relation(fields: [conversationId], references: [id])
  conversationId String             @db.ObjectId
  members        ConversationUser[]
}

model Conversations {
  id           String             @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  admin        String             @db.ObjectId
  groupAvatar  String             @default("")
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  members      ConversationUser[]
  MessageGroup MessageGroup[]
}

model ConversationUser {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  conversation   Conversations @relation(fields: [conversationId], references: [id])
  conversationId String        @db.ObjectId
  user           User          @relation(fields: [userId], references: [id])
  userId         String        @db.ObjectId
  MessageGroup   MessageGroup? @relation(fields: [messageGroupId], references: [id])
  messageGroupId String?       @db.ObjectId
}
